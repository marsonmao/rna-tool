{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["includedColumns","excludedColumns","transformers","rawValue","classes","root","css","topBar","content","marginRight","table","tableHeaderCell","App","React","useState","reservations","setReservations","courseName","setCourseName","email","setEmail","removeDuplicateEmail","setRemoveDuplicateEmail","completeParse","useCallback","result","console","log","data","handleCSVFile","event","file","target","files","papa","parse","complete","header","handleCourseName","e","value","handleEmail","handleRemoveDuplicate","v","courseNames","Set","forEach","row","Object","keys","filter","col","startsWith","map","add","displayColumns","some","inc","every","exc","headerElement","i","className","toString","displayRows","useMemo","values","val","split","emailColumnName","uniqueEmails","reverse","length","has","rowElements","j","handleCopyEmails","navigator","clipboard","writeText","join","type","name","onChange","Array","from","sort","onClick","placeholder","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.671a6fe0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport papa from \"papaparse\";\r\nimport { css } from \"@emotion/css\";\r\n\r\ntype Reservation = Record<string, string>;\r\n\r\nconst courseColumnNamePrefix = \"課程\" as const;\r\nconst courseColumnNameExclude = \"課程選擇\" as const;\r\nconst cancelledCourseColumnName = \"取消課程編號\" as const;\r\nconst emailColumnName = \"電子郵件地址\" as const;\r\nconst includedColumns = [\"時間戳記\", \"稱呼\", \"電子郵件地址\", \"上課方案\"] as const;\r\nconst excludedColumns = [] as const;\r\nconst transformers: Record<string, (rawValue: string) => string> = {\r\n  \"上課方案\": (rawValue: string) => rawValue !== '新生體驗' ? '' : rawValue,\r\n}\r\n\r\nconst classes = {\r\n  root: css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  topBar: css`\r\n    width: 100%;\r\n    height: 64px;\r\n    padding: 12px 24px;\r\n    box-shadow: 0px -10px 20px 0px #000;\r\n  `,\r\n  content: css`\r\n    width: 100%;\r\n    flex: 1 0 64px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding: 12px 24px;\r\n  `,\r\n  marginRight: css`\r\n    margin-right: 8px;\r\n  `,\r\n  table: css`\r\n    width: 100%;\r\n  `,\r\n  tableHeaderCell: css`\r\n    border-bottom: 1px solid black;\r\n  `,\r\n};\r\n\r\nfunction App() {\r\n  const [reservations, setReservations] = React.useState<Array<Reservation>>([]);\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [removeDuplicateEmail, setRemoveDuplicateEmail] = React.useState(false);\r\n\r\n  const completeParse = React.useCallback(\r\n    (result: papa.ParseResult<Reservation>) => {\r\n      console.log(\"[DEBUG]\", result.data);\r\n      setReservations(result.data);\r\n    },\r\n    []\r\n  );\r\n  const handleCSVFile = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >(\r\n    (event) => {\r\n      const file = event.target.files?.[0];\r\n      if (!file) return;\r\n\r\n      papa.parse(file, {\r\n        complete: completeParse,\r\n        header: true,\r\n      });\r\n    },\r\n    [completeParse]\r\n  );\r\n  const handleCourseName = React.useCallback<\r\n    React.ChangeEventHandler<HTMLSelectElement>\r\n  >((e) => {\r\n    setCourseName(e.target.value);\r\n    setEmail(\"\");\r\n  }, []);\r\n  const handleEmail = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >((e) => {\r\n    setEmail(e.target.value);\r\n    setCourseName(\"\");\r\n  }, []);\r\n  const handleRemoveDuplicate = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >((e) => {\r\n    setRemoveDuplicateEmail(v => !v);\r\n  }, []);\r\n\r\n  const courseNames = new Set<string>();\r\n  reservations.forEach((row) => {\r\n    Object.keys(row)\r\n      .filter(\r\n        (col) =>\r\n          col !== courseColumnNameExclude &&\r\n          col.startsWith(courseColumnNamePrefix)\r\n      )\r\n      .map((col) => courseNames.add(row[col]));\r\n  });\r\n  const displayColumns = Object.keys(reservations[0] || {}).filter(\r\n    (col) =>\r\n      includedColumns.some((inc) => col.startsWith(inc)) &&\r\n      excludedColumns.every((exc) => !col.startsWith(exc))\r\n  );\r\n  const headerElement = (\r\n    <tr>\r\n      {displayColumns.map((col, i) => (\r\n        <td className={classes.tableHeaderCell} key={i.toString()}>\r\n          {col}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n  const displayRows = React.useMemo(() => {\r\n    let result = reservations\r\n      .filter((row) => courseName === \"\" || Object.values(row).some((val) => val === courseName))\r\n      .filter((row) => {\r\n        const cancelledCourses = row[cancelledCourseColumnName]\r\n          .split(\",\")\r\n          .filter((val) => val !== \"\");\r\n        return cancelledCourses.every((col) => row[col] !== courseName);\r\n      }).filter((row) => email === \"\" || row[emailColumnName] === email);\r\n    if (removeDuplicateEmail) {\r\n      const uniqueEmails = new Set();\r\n      result.reverse();\r\n      for (let i = 0; i < result.length; ++i) {\r\n        if (uniqueEmails.has(result[i][emailColumnName])) {\r\n          result[i] = {};\r\n        } else {\r\n          uniqueEmails.add(result[i][emailColumnName]);\r\n        }\r\n      }\r\n      result = result.filter(row => Object.keys(row).length !== 0);\r\n      result.reverse();\r\n    }\r\n    return result;\r\n  }, [reservations, courseName, email, removeDuplicateEmail]);\r\n  const rowElements = displayRows.map((row, i) => (\r\n    <tr key={i.toString()}>\r\n      {displayColumns.map((col, j) => (\r\n        <td key={j.toString()}>{transformers[col] ? transformers[col](row[col]) : row[col]}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  const handleCopyEmails = React.useCallback<\r\n    React.MouseEventHandler<HTMLButtonElement>\r\n  >(\r\n    (e) => {\r\n      navigator.clipboard.writeText(\r\n        displayRows.map((row) => row[emailColumnName]).join()\r\n      );\r\n    },\r\n    [displayRows]\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.topBar}>\r\n        <input\r\n          className={classes.marginRight}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleCSVFile}\r\n        />\r\n        <select className={classes.marginRight} value={courseName} onChange={handleCourseName}>\r\n          {Array.from(courseNames)\r\n            .sort()\r\n            .map((name, i) => (\r\n              <option key={i.toString()}>{name}</option>\r\n            ))}\r\n        </select>\r\n        <span className={classes.marginRight}>{rowElements.length}人</span>\r\n        <button className={classes.marginRight} onClick={handleCopyEmails}>Copy Emails</button>\r\n        <input className={classes.marginRight} placeholder=\"搜尋email\" value={email} onChange={handleEmail} />\r\n        <label className={classes.marginRight}>消除重複<input type=\"checkbox\" checked={removeDuplicateEmail} onChange={handleRemoveDuplicate} /></label>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <table className={classes.table}>\r\n          <thead>{headerElement}</thead>\r\n          <tbody>{rowElements}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}