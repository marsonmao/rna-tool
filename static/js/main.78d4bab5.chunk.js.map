{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["includedColumns","excludedColumns","transformers","rawValue","console","log","split","map","v","join","classes","root","css","topBar","content","marginRight","table","tableHeaderCell","tableDataCell","App","React","useState","reservations","setReservations","courseName","setCourseName","email","setEmail","removeDuplicateEmail","setRemoveDuplicateEmail","completeParse","useCallback","result","data","handleCSVFile","event","file","target","files","papa","parse","complete","header","handleCourseName","e","value","handleEmail","handleRemoveDuplicate","courseNames","useMemo","Set","forEach","row","Object","keys","filter","col","startsWith","add","displayColumns","some","inc","every","exc","push","displayRows","values","val","emailColumnName","uniqueEmails","reverse","i","length","has","headerElement","className","toString","rowElements","j","handleCopyEmails","navigator","clipboard","writeText","type","name","onChange","Array","from","sort","onClick","placeholder","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78d4bab5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport papa from \"papaparse\";\r\nimport { css } from \"@emotion/css\";\r\n\r\ntype Reservation = Record<string, string>;\r\n\r\n// For collecting course names\r\nconst courseColumnNamePrefix = \"課程\" as const;\r\nconst courseColumnNameExclude = \"課程選擇\" as const;\r\n\r\n// Some column name constant\r\nconst cancelledCourseColumnName = \"取消課程編號\" as const;\r\nconst emailColumnName = \"電子郵件地址\" as const;\r\nconst courseSelectionColumnName = \"課程選擇\" as const;\r\n\r\n// Display constant\r\nconst includedColumns = [\"時間戳記\", \"稱呼\", \"電子郵件地址\", \"上課方案\"] as const;\r\nconst excludedColumns = [] as const;\r\nconst transformers: Record<string, (rawValue: string) => string> = {\r\n  \"上課方案\": (rawValue: string) => rawValue !== '新生體驗' ? '' : rawValue,\r\n  \"課程選擇\": (rawValue: string) => {\r\n    console.log(rawValue, rawValue.split(', '), rawValue.split(',').map(v => `${v}\\n`).join(''));\r\n    return rawValue.split(', ').map(v => `${v}\\n`).join('');\r\n  },\r\n}\r\n\r\nconst classes = {\r\n  root: css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  topBar: css`\r\n    width: 100%;\r\n    height: 64px;\r\n    padding: 12px 24px;\r\n    box-shadow: 0px -10px 20px 0px #000;\r\n  `,\r\n  content: css`\r\n    width: 100%;\r\n    flex: 1 0 64px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding: 12px 24px;\r\n  `,\r\n  marginRight: css`\r\n    margin-right: 8px;\r\n  `,\r\n  table: css`\r\n    width: 100%;\r\n  `,\r\n  tableHeaderCell: css`\r\n    border-bottom: 1px solid black;\r\n  `,\r\n  tableDataCell: css`\r\n    vertical-align: top;\r\n    white-space: pre-line;\r\n    border-bottom: 1px solid black;\r\n  `,\r\n};\r\n\r\nfunction App() {\r\n  const [reservations, setReservations] = React.useState<Array<Reservation>>([]);\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [removeDuplicateEmail, setRemoveDuplicateEmail] = React.useState(false);\r\n\r\n  const completeParse = React.useCallback(\r\n    (result: papa.ParseResult<Reservation>) => {\r\n      console.log(\"[DEBUG]\", result.data);\r\n      setReservations(result.data);\r\n    },\r\n    []\r\n  );\r\n  const handleCSVFile = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >(\r\n    (event) => {\r\n      const file = event.target.files?.[0];\r\n      if (!file) return;\r\n\r\n      papa.parse(file, {\r\n        complete: completeParse,\r\n        header: true,\r\n      });\r\n    },\r\n    [completeParse]\r\n  );\r\n  const handleCourseName = React.useCallback<\r\n    React.ChangeEventHandler<HTMLSelectElement>\r\n  >((e) => {\r\n    setCourseName(e.target.value);\r\n    setEmail(\"\");\r\n  }, []);\r\n  const handleEmail = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >((e) => {\r\n    setEmail(e.target.value);\r\n    setCourseName(\"\");\r\n  }, []);\r\n  const handleRemoveDuplicate = React.useCallback<\r\n    React.ChangeEventHandler<HTMLInputElement>\r\n  >((e) => {\r\n    setRemoveDuplicateEmail(v => !v);\r\n  }, []);\r\n\r\n  // Generate data\r\n  const courseNames = React.useMemo(() => {\r\n    const result = new Set<string>();\r\n    reservations.forEach((row) => {\r\n      Object.keys(row)\r\n        .filter(\r\n          (col) =>\r\n            col !== courseColumnNameExclude &&\r\n            col.startsWith(courseColumnNamePrefix)\r\n        )\r\n        .map((col) => result.add(row[col]));\r\n    });\r\n    return result;\r\n  }, [reservations]);\r\n  const displayColumns = React.useMemo(() => {\r\n    const result = Object.keys(reservations[0] || {}).filter(\r\n      (col) =>\r\n        includedColumns.some((inc) => col.startsWith(inc)) &&\r\n        excludedColumns.every((exc) => !col.startsWith(exc))\r\n    );\r\n    if (email !== \"\") result.push(courseSelectionColumnName);\r\n    return result;\r\n  }, [reservations, email])\r\n  const displayRows = React.useMemo(() => {\r\n    let result = reservations\r\n      .filter((row) => courseName === \"\" || Object.values(row).some((val) => val === courseName))\r\n      .filter((row) => {\r\n        const cancelledCourses = row[cancelledCourseColumnName]\r\n          .split(\",\")\r\n          .filter((val) => val !== \"\");\r\n        return cancelledCourses.every((col) => row[col] !== courseName);\r\n      }).filter((row) => email === \"\" || row[emailColumnName] === email);\r\n    if (removeDuplicateEmail) {\r\n      const uniqueEmails = new Set();\r\n      result.reverse();\r\n      for (let i = 0; i < result.length; ++i) {\r\n        if (uniqueEmails.has(result[i][emailColumnName])) {\r\n          result[i] = {};\r\n        } else {\r\n          uniqueEmails.add(result[i][emailColumnName]);\r\n        }\r\n      }\r\n      result = result.filter(row => Object.keys(row).length !== 0);\r\n      result.reverse();\r\n    }\r\n    return result;\r\n  }, [reservations, courseName, email, removeDuplicateEmail]);\r\n  \r\n  // Render\r\n  const headerElement = (\r\n    <tr>\r\n      {displayColumns.map((col, i) => (\r\n        <td className={classes.tableHeaderCell} key={i.toString()}>\r\n          {col}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n  const rowElements = displayRows.map((row, i) => (\r\n    <tr key={i.toString()}>\r\n      {displayColumns.map((col, j) => (\r\n        <td key={j.toString()} className={classes.tableDataCell}>{transformers[col] ? transformers[col](row[col]) : row[col]}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  const handleCopyEmails = React.useCallback<\r\n    React.MouseEventHandler<HTMLButtonElement>\r\n  >(\r\n    (e) => {\r\n      navigator.clipboard.writeText(\r\n        displayRows.map((row) => row[emailColumnName]).join()\r\n      );\r\n    },\r\n    [displayRows]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.topBar}>\r\n        <input\r\n          className={classes.marginRight}\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={handleCSVFile}\r\n        />\r\n        <select className={classes.marginRight} value={courseName} onChange={handleCourseName}>\r\n          {Array.from(courseNames)\r\n            .sort()\r\n            .map((name, i) => (\r\n              <option key={i.toString()}>{name}</option>\r\n            ))}\r\n        </select>\r\n        <span className={classes.marginRight}>{rowElements.length}人</span>\r\n        <button className={classes.marginRight} onClick={handleCopyEmails}>Copy Emails</button>\r\n        <input className={classes.marginRight} placeholder=\"搜尋email\" value={email} onChange={handleEmail} />\r\n        <label className={classes.marginRight}>消除重複<input type=\"checkbox\" checked={removeDuplicateEmail} onChange={handleRemoveDuplicate} /></label>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <table className={classes.table}>\r\n          <thead>{headerElement}</thead>\r\n          <tbody>{rowElements}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}