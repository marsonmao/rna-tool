{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["includedColumns","excludedColumns","classes","root","css","topBar","content","marginRight","table","tableHeaderCell","App","React","useState","reservations","setReservations","courseName","setCourseName","completeParse","useCallback","result","console","log","data","handleCSVFile","event","file","target","files","papa","parse","complete","header","handleCourseName","e","value","courseNames","Set","forEach","row","Object","keys","filter","col","startsWith","map","add","displayColumns","some","inc","every","exc","headerElement","i","className","toString","displayRows","values","val","split","rowElements","handleCopyEmails","navigator","clipboard","writeText","join","type","name","onChange","Array","from","sort","length","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e1c895.chunk.js","sourcesContent":["import React from \"react\";\nimport papa from \"papaparse\";\nimport { css } from \"@emotion/css\";\n\ntype Reservation = Record<string, string>;\n\nconst courseColumnNamePrefix = \"課程\" as const;\nconst courseColumnNameExclude = \"課程選擇\" as const;\nconst cancelledCourseColumnName = \"取消課程編號\" as const;\nconst emailColumnName = \"電子郵件地址\" as const;\nconst includedColumns = [\"時間戳記\", \"稱呼\", \"電子郵件地址\"] as const;\nconst excludedColumns = [] as const;\n\nconst classes = {\n  root: css`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  topBar: css`\n    width: 100%;\n    height: 64px;\n    padding: 12px 24px;\n    box-shadow: 0px -10px 20px 0px #000;\n  `,\n  content: css`\n    width: 100%;\n    flex: 1 0 64px;\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding: 12px 24px;\n  `,\n  marginRight: css`\n    margin-right: 8px;\n  `,\n  table: css`\n    width: 100%;\n  `,\n  tableHeaderCell: css`\n    border-bottom: 1px solid black;\n  `,\n};\n\nfunction App() {\n  const [reservations, setReservations] = React.useState<Array<Reservation>>([\n    {},\n  ]);\n  const [courseName, setCourseName] = React.useState(\"\");\n\n  const completeParse = React.useCallback(\n    (result: papa.ParseResult<Reservation>) => {\n      console.log(\"[DEBUG]\", result.data);\n      setReservations(result.data);\n    },\n    []\n  );\n  const handleCSVFile = React.useCallback<\n    React.ChangeEventHandler<HTMLInputElement>\n  >(\n    (event) => {\n      const file = event.target.files?.[0];\n      if (!file) return;\n\n      papa.parse(file, {\n        complete: completeParse,\n        header: true,\n      });\n    },\n    [completeParse]\n  );\n  const handleCourseName = React.useCallback<\n    React.ChangeEventHandler<HTMLSelectElement>\n  >((e) => {\n    setCourseName(e.target.value);\n  }, []);\n\n  const courseNames = new Set<string>();\n  reservations.forEach((row) => {\n    Object.keys(row)\n      .filter(\n        (col) =>\n          col !== courseColumnNameExclude &&\n          col.startsWith(courseColumnNamePrefix)\n      )\n      .map((col) => courseNames.add(row[col]));\n  });\n  const displayColumns = Object.keys(reservations[0]).filter(\n    (col) =>\n      includedColumns.some((inc) => col.startsWith(inc)) &&\n      excludedColumns.every((exc) => !col.startsWith(exc))\n  );\n  const headerElement = (\n    <tr>\n      {displayColumns.map((col, i) => (\n        <td className={classes.tableHeaderCell} key={i.toString()}>\n          {col}\n        </td>\n      ))}\n    </tr>\n  );\n  const displayRows = reservations\n    .filter((row) => Object.values(row).some((val) => val === courseName))\n    .filter((row) => {\n      const cancelledCourses = row[cancelledCourseColumnName]\n        .split(\",\")\n        .filter((val) => val !== \"\");\n      return cancelledCourses.every((col) => row[col] !== courseName);\n    });\n  const rowElements = displayRows.map((row, i) => (\n    <tr key={i.toString()}>\n      {displayColumns.map((col) => (\n        <td>{row[col]}</td>\n      ))}\n    </tr>\n  ));\n  const handleCopyEmails = React.useCallback<\n    React.MouseEventHandler<HTMLButtonElement>\n  >(\n    (e) => {\n      navigator.clipboard.writeText(\n        displayRows.map((row) => row[emailColumnName]).join()\n      );\n    },\n    [displayRows]\n  );\n  return (\n    <div className={classes.root}>\n      <div className={classes.topBar}>\n        <input\n          className={classes.marginRight}\n          type=\"file\"\n          name=\"file\"\n          onChange={handleCSVFile}\n        />\n        <select className={classes.marginRight} onChange={handleCourseName}>\n          {Array.from(courseNames)\n            .sort()\n            .map((name) => (\n              <option>{name}</option>\n            ))}\n        </select>\n        <span className={classes.marginRight}>{rowElements.length}人</span>\n        <button onClick={handleCopyEmails}>Copy Emails</button>\n      </div>\n      <div className={classes.content}>\n        <table className={classes.table}>\n          <thead>{headerElement}</thead>\n          <tbody>{rowElements}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}